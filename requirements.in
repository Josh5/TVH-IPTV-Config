#
# This requirements.in file manages the requirements.txt file using the pip-tools package.
#
# To update the requirements.txt file, run these commands:
#   1) Install pip-tools
#       > pip install pip-tools
#   2) Use pip-compile to build the requirements.txt file using one of these command examples
#       > pip-compile ./requirements.in                             # Build a requirements.txt file from the requirements.in file without modifying all the dependencies
#       > pip-compile ./requirements.in --upgrade                   # Try to upgrade all dependencies to their latest versions
#       > pip-compile ./requirements.in --upgrade-package flask     # Only update the flask package
#   3) Test that all local build dependencies now install without conflict. Update requirements-dev.txt dependencies as required.
#       > python -m pip install -r ./requirements.txt -r ./requirements-dev.txt
#



# ----------------------------- Core Packages ---------------------------- #
#
#   Description:    For core packages used by the project.
#

# -- Server or stand-alone executables
Quart~=0.19.6
    #   Reason:             This is the web server framework
    #   Import example:     N/A
gunicorn~=22.0.0
    #   Reason:             Used to serve the Django application in production
    #   Import example:     N/A (Executed from bin directory)

# -- Extensions
quart-flask-patch~=0.3.0
    #   Reason:             Quart-Flask-Patch is a Quart extension that patches Quart to work with Flask extensions.
    #   Import example:     import quart_flask_patch
Flask-SQLAlchemy~=3.1.1
    #   Reason:             Add SQLAlchemy support to your Flask application.
    #   Import example:     from flask_sqlalchemy import SQLAlchemy
alembic~=1.13.1
    #   Reason:             SQLAlchemy database migrations for the application
    #   Import example:     from alembic import context
APScheduler~=3.10.4
    #   Reason:             Adds APScheduler for running scheduled tasks
    #   Import example:     from apscheduler.schedulers.asyncio import AsyncIOScheduler

# -- Support libraries
aiosqlite~=0.20.0
    #   Reason:             Async SQLite driver.
    #   Import example:     sqlite+aiosqlite:///
aiohttp~=3.9.5
    #   Reason:             Async http client/server framework (asyncio). Required for the proxy server.
    #   Import example:     import aiohttp
m3u-ipytv~=0.2.7
    #   Reason:             A library for handling M3U playlists for IPTV (AKA m3u_plus)
    #   Import example:     from ipytv import playlist
mergedeep~=1.3.4
    #   Reason:             Used to merge 2 dictionaries when updating the YAML config file
    #   Import example:     from mergedeep import merge
PyYAML~=6.0.1
    #   Reason:             YAML parser and emitter for Python
    #   Import example:     import yaml
requests~=2.31.0
    #   Reason:             HTTP requests
    #   Import example:     import requests
beautifulsoup4~=4.12.3
    #   Reason:             HTTP parsing
    #   Import example:     from bs4 import BeautifulSoup
